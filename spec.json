{
  "nio/MongoDBAggregation": {
    "description": "A block for finding and grouping multiple documents together.",
    "categories": [
      "Database"
    ],
	"from_readme": "README.md",
	"from_python": "mongodb_aggregation_block.MongoDBAggregation"
  },
  "nio/MongoDBBulkInsert": {
    "description": "Exactly the same as MongoDB, except it stores data much faster. This is because it's `collection` property is a String property, not an Expression property. This speeds things up, as it doesn't have to evaluate it for every insert.",
    "categories": [
      "Database"
    ],
	"from_readme": "README.md",
	"from_python": "mongodb_bulk_insert_block.MongoDBBulkInsert"
  },
  "nio/MongoDBCommand": {
    "description": "A block for running mongo commands",
    "categories": [
      "Database"
    ],
	"from_readme": "README.md",
	"from_python": "mongodb_aggregation_block.MongoDBAggregation"
  },
  "nio/MongoDBFind": {
    "description": "A block for running `find` against a mongodb.",
    "categories": [
      "Database"
    ],
	"from_readme": "README.md",
	"from_python": "mongodb_find_block.MongoDBFind"
  },
  "nio/MongoDBInsert": {
    "description": "Stores input signals in a mongo database. One document will be inserted into the database for each input signal.",
    "categories": [
      "Database"
    ],
	"from_readme": "README.md",
	"from_python": "mongodb_insert_block.MongoDBInsert"
  },
  "nio/MongoDBRemove": {
    "description": "Stores input signals in a mongo database. One document will be removed from the database for each input signal.",
    "categories": [
      "Database"
    ],
	"from_readme": "README.md",
	"from_python": "mongodb_remove_block.MongoDBRemove"
  },
  "nio/MongoDBUpdate": {
    "description": "Stores input signals in a mongo database. One document will be updated in the database for each input signal.",
    "categories": [
      "Database"
    ],
	"from_readme": "README.md",
	"from_python": "mongodb_update_block.MongoDBUpdate"
  }
}
